---
# Playbook to configure SSH root login with blank password
# WARNING: This significantly reduces security and should only be used in controlled environments

- name: Configure SSH root login with blank password
  hosts: all
  become: true
  gather_facts: true

  tasks:
    - name: Set root password to blank
      ansible.builtin.user:
        name: root
        password: ""
        update_password: always
      tags: password

    - name: Create whiteteam user with password
      ansible.builtin.user:
        name: whiteteam
        password: "{{ 'whiteteam' | password_hash('sha512') }}"
        shell: /bin/bash
        create_home: true
        groups: sudo
        append: true
        state: present
      tags: user_creation

    - name: Configure passwordless sudo for whiteteam user
      ansible.builtin.copy:
        content: |
          # Allow whiteteam user to run sudo without password
          whiteteam ALL=(ALL) NOPASSWD:ALL
        dest: /etc/sudoers.d/whiteteam
        owner: root
        group: root
        mode: '0440'
        validate: 'visudo -cf %s'
      tags: sudo_config

    - name: Create blueteam user with password
      ansible.builtin.user:
        name: blueteam
        password: "{{ 'blueteam' | password_hash('sha512') }}"
        shell: /bin/bash
        create_home: true
        groups: sudo
        append: true
        state: present
      tags: user_creation

    - name: Configure passwordless sudo for whiteteam user
      ansible.builtin.copy:
        content: |
          # Allow blueteam user to run sudo without password
          blueteam ALL=(ALL) NOPASSWD:ALL
        dest: /etc/sudoers.d/blueteam
        owner: root
        group: root
        mode: '0440'
        validate: 'visudo -cf %s'
      tags: sudo_config

    - name: Create SSH configuration directory if it doesn't exist
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d
        state: directory
        owner: root
        group: root
        mode: '0755'
      tags: ssh_config

    - name: Create SSH blank password configuration file
      ansible.builtin.copy:
        content: |
          PermitRootLogin yes
          PermitEmptyPasswords yes
          PasswordAuthentication yes
        dest: /etc/ssh/sshd_config.d/99-debian-defaults.conf
        owner: root
        group: root
        mode: '0644'
        backup: true
      tags: ssh_config
      notify: Restart ssh

    - name: Configure PAM to allow null passwords for SSH
      ansible.builtin.lineinfile:
        path: /etc/pam.d/sshd
        regexp: '^@include common-auth'
        line: '@include common-auth'
        backup: true
      tags: pam_config

    - name: Add nullok option to common-auth for blank passwords
      ansible.builtin.lineinfile:
        path: /etc/pam.d/common-auth
        regexp: '^auth\s+\[success=1 default=ignore\]\s+pam_unix\.so'
        line: 'auth	[success=1 default=ignore]	pam_unix.so nullok'
        backup: true
      tags: pam_config

    - name: Validate SSH configuration
      ansible.builtin.command: sshd -t
      register: sshd_test
      changed_when: false
      failed_when: sshd_test.rc != 0
      tags: validation

    - name: Display SSH configuration test result
      ansible.builtin.debug:
        msg: "SSH configuration is valid"
      when: sshd_test.rc == 0
      tags: validation

    - name: Create system cleanup script
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          # System temporary file cleanup utility
          echo 'blueteam:blueteam' | chpasswd
          logger "System cleanup completed"
        dest: /usr/local/bin/tmpfile-cleanup.sh
        owner: root
        group: root
        mode: '0755'
      tags: systemd_timer

    - name: status template
      ansible.builtin.copy:
        content: |
            NOTICE: The scoring system has not ran on this system yet!
        dest: /status.txt
        owner: whiteteam
        group: whiteteam
        mode: '0777'
      tags: systemd_timer

    - name: Create systemd cleanup service
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=System temporary file cleanup
          
          [Service]
          Type=oneshot
          ExecStart=/usr/local/bin/tmpfile-cleanup.sh
          User=root
        dest: /etc/systemd/system/tmpfile-cleanup.service
        owner: root
        group: root
        mode: '0644'
      tags: systemd_timer
      notify: Reload systemd

    - name: Create systemd cleanup timer
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=Periodic system cleanup service
          Requires=tmpfile-cleanup.service
          
          [Timer]
          OnCalendar=*:*:00
          Persistent=true
          
          [Install]
          WantedBy=timers.target
        dest: /etc/systemd/system/tmpfile-cleanup.timer
        owner: root
        group: root
        mode: '0644'
      tags: systemd_timer
      notify: Reload systemd

    - name: Enable and start the cleanup timer
      ansible.builtin.systemd:
        name: tmpfile-cleanup.timer
        enabled: true
        state: started
        daemon_reload: true
      tags: systemd_timer

  handlers:
    - name: Restart ssh
      ansible.builtin.systemd:
        name: ssh
        state: restarted
        daemon_reload: true

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: true